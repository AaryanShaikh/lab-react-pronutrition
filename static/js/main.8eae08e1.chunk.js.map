{"version":3,"sources":["components/FoodBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["FoodBox","props","searchFruit","event","setState","searchTxt","target","value","capatalize","name","charAt","toUpperCase","slice","toLowerCase","addFruit","count","document","getElementById","cal","state","fruits","filter","fruit","fruitObj","id","text","calories","btn_id","calo","myFruits","concat","calories_count","console","log","removeFruit","remove","calorie","img","className","type","placeholder","onChange","this","includes","map","src","alt","defaultValue","min","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8eae08e1.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class FoodBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // Data\r\n            fruits: [\r\n                { name: \"orange\", calories: 65, img: \"https://www.kindpng.com/picc/m/155-1555808_oranges-png-image-orange-fruit-transparent-png.png\" },\r\n                { name: \"chocolate milk\", calories: 208, img: \"https://www.sugarsaltmagic.com/wp-content/uploads/2020/10/Homemade-Chcolate-Milk-6FEATURED.jpg\" },\r\n                { name: \"apple\", calories: 81, img: \"https://usapple.org/wp-content/uploads/2019/10/apple-pink-lady.png\" },\r\n                { name: \"watermelon\", calories: 85, img: \"https://solidstarts.com/wp-content/uploads/when-can-babies-eat-watermelon.jpg\" },\r\n                { name: \"banana\", calories: 105, img: \"https://cdn.mos.cms.futurecdn.net/42E9as7NaTaAi4A6JcuFwG-1200-80.jpg\" },\r\n                { name: \"biscuit\", calories: 103, img: \"https://www.biggerbolderbaking.com/wp-content/uploads/2017/02/Digestive-Biscuits-copy-1.jpg\" },\r\n                { name: \"pizza\", calories: 290, img: \"https://static.toiimg.com/thumb/53110049.cms?width=1200&height=900\" },\r\n                { name: \"grapes\", calories: 114, img: \"https://lh3.googleusercontent.com/OPYcKKKfd-8ygRSbb10ZvOQWbRTJqIuuwwkEyFIeyMQVpLzsOY9Zjdvc1WQWh3-zzLPaQfDGD8d64RJyzbhOTkS2g1xgRy7wC1yKs5ox7aE84LE6gpw_-SSxyWtf8E9fJmF_Zlw\" },\r\n                { name: \"raspberries\", calories: 61, img: \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2b/Raspberries_%28Rubus_idaeus%29.jpg/1200px-Raspberries_%28Rubus_idaeus%29.jpg\" },\r\n                { name: \"strawberries\", calories: 45, img: \"https://images.immediate.co.uk/production/volatile/sites/30/2013/06/Strawberries-in-a-bowl-e53b458-scaled.jpg?quality=90&resize=768%2C574\" }\r\n            ],\r\n            searchTxt: \"\", // Data to be searched\r\n            calories_count: 0, // Total calories\r\n            myFruits: []\r\n        }\r\n    }\r\n    // method for searching the fruit\r\n    searchFruit = (event) => {\r\n        this.setState({\r\n            searchTxt: event.target.value\r\n        })\r\n    }\r\n    // Capitalize the first letter of the fruit\r\n    capatalize = (name) => {\r\n        return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\r\n    }\r\n    // Add fruits to calories section\r\n    addFruit = (event) => {\r\n        let count = document.getElementById(event.target.value).value;\r\n        let cal = this.state.fruits.filter((fruit) => {\r\n            return fruit.name === event.target.value;\r\n        })\r\n        let fruitObj = {\r\n            id: event.target.value,\r\n            text: `${count} ${event.target.value} = ${(cal[0].calories) * count}`,\r\n            btn_id: `${event.target.value}R`,\r\n            calo: cal[0].calories * count\r\n        }\r\n        this.setState({\r\n            myFruits: this.state.myFruits.concat(fruitObj),\r\n            calories_count: this.state.calories_count + (cal[0].calories * count)\r\n        })\r\n        console.log(this.state.myFruits);\r\n    }\r\n    // Remove fruits from calories\r\n    removeFruit = (event) => {\r\n        document.getElementById(event.target.value).remove();\r\n        let calorie = this.state.myFruits.filter((fruit) => {\r\n            return `${fruit.id}R` === event.target.value\r\n        })\r\n        this.setState({\r\n            calories_count: this.state.calories_count - calorie[0].calo\r\n        })\r\n    }\r\n\r\n    // Main Render method\r\n    render() {\r\n        return (\r\n            <div className=\"main-container\">\r\n                <div className=\"search-container\">\r\n                    <h1>Search</h1>\r\n                    <input type=\"text\" placeholder=\"Find a food\" onChange={this.searchFruit} id=\"search\" />\r\n                </div>\r\n                <div className=\"food-container\">\r\n                    <div className=\"left\">\r\n                        {this.state.fruits.filter((fruit) => {\r\n                            return fruit.name.includes(this.state.searchTxt);\r\n                        })\r\n                            .map((fruit) => {\r\n                                return <div key={fruit.name} className=\"fruit\">\r\n                                    <img src={fruit.img} alt=\"\" />\r\n                                    <div className=\"detail\">\r\n                                        <h1>{this.capatalize(fruit.name)}</h1>\r\n                                        <h4>{fruit.calories}</h4>\r\n                                    </div>\r\n                                    <div className=\"count\">\r\n                                        <input type=\"number\" defaultValue=\"1\" id={fruit.name} min=\"0\" />\r\n                                        <button onClick={this.addFruit} value={fruit.name}>+</button>\r\n                                    </div>\r\n                                </div>\r\n                            })}\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        <h1>Today's Food {this.state.calories_count} Calories</h1>\r\n                        {\r\n                            this.state.myFruits.filter((fruit) => {\r\n                                return fruit.text !== \"\";\r\n                            })\r\n                                .map((fruit) => {\r\n                                    return <div key={fruit.id} className=\"item\" id={fruit.btn_id}>\r\n                                        <span>{fruit.text}</span>\r\n                                        <button onClick={this.removeFruit} value={fruit.btn_id}>X</button>\r\n                                    </div>\r\n                                })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\nimport FoodBox from './components/FoodBox';\n\nfunction App() {\n  return (\n    <>\n      <div className=\"header\">Pro-Nutritions</div>\n      <FoodBox />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}